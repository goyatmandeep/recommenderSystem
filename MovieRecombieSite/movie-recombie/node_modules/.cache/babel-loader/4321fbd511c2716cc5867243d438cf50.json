{"ast":null,"code":"var _jsxFileName = \"/media/cheatcode/0E2286E45B543E69/Projects/Website/recommender-system/MovieRecombieSite/movie-recombie/src/components/CustomDropdown/CustomDropdown.jsx\";\nimport React from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Popper from \"@material-ui/core/Popper\"; // core components\n\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport customDropdownStyle from \"assets/jss/material-kit-pro-react/components/customDropdownStyle.jsx\";\n\nclass CustomDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      this.setState(state => ({\n        open: !state.open\n      }));\n    };\n\n    this.handleClose = event => {\n      if (this.anchorEl.contains(event.target)) {\n        return;\n      }\n\n      this.setState({\n        open: false\n      });\n    };\n\n    this.state = {\n      open: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleCloseMenu = this.handleCloseMenu.bind(this);\n  }\n\n  handleCloseMenu(param) {\n    this.setState({\n      open: false\n    });\n\n    if (this.props && this.props.onClick) {\n      this.props.onClick(param);\n    }\n  }\n\n  render() {\n    const open = this.state.open;\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          buttonText = _this$props.buttonText,\n          buttonIcon = _this$props.buttonIcon,\n          dropdownList = _this$props.dropdownList,\n          buttonProps = _this$props.buttonProps,\n          dropup = _this$props.dropup,\n          dropdownHeader = _this$props.dropdownHeader,\n          caret = _this$props.caret,\n          hoverColor = _this$props.hoverColor,\n          dropPlacement = _this$props.dropPlacement,\n          rtlActive = _this$props.rtlActive,\n          noLiPadding = _this$props.noLiPadding,\n          innerDropDown = _this$props.innerDropDown,\n          navDropdown = _this$props.navDropdown;\n    const caretClasses = classNames({\n      [classes.caret]: true,\n      [classes.caretDropup]: dropup && !open,\n      [classes.caretActive]: open && !dropup,\n      [classes.caretRTL]: rtlActive\n    });\n    const dropdownItem = classNames({\n      [classes.dropdownItem]: true,\n      [classes[hoverColor + \"Hover\"]]: true,\n      [classes.noLiPadding]: noLiPadding,\n      [classes.dropdownItemRTL]: rtlActive\n    });\n    const dropDownMenu = React.createElement(MenuList, {\n      role: \"menu\",\n      className: classes.menuList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, dropdownHeader !== undefined ? React.createElement(MenuItem, {\n      onClick: () => this.handleCloseMenu(dropdownHeader),\n      className: classes.dropdownHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, dropdownHeader) : null, dropdownList.map((prop, key) => {\n      if (prop.divider) {\n        return React.createElement(Divider, {\n          key: key,\n          onClick: () => this.handleCloseMenu(\"divider\"),\n          className: classes.dropdownDividerItem,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        });\n      } else if (prop.props !== undefined && prop.props[\"data-ref\"] === \"multi\") {\n        return React.createElement(MenuItem, {\n          key: key,\n          className: dropdownItem,\n          style: {\n            overflow: \"visible\",\n            padding: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, prop);\n      }\n\n      return React.createElement(MenuItem, {\n        key: key,\n        onClick: () => this.handleCloseMenu(prop),\n        className: dropdownItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, prop);\n    }));\n    return React.createElement(\"div\", {\n      className: innerDropDown ? classes.innerManager : classes.manager,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: buttonText !== undefined ? \"\" : classes.target,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Button, Object.assign({\n      \"aria-label\": \"Notifications\",\n      \"aria-owns\": open ? \"menu-list\" : null,\n      \"aria-haspopup\": \"true\",\n      buttonRef: node => {\n        this.anchorEl = node;\n      }\n    }, buttonProps, {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), buttonIcon !== undefined ? React.createElement(this.props.buttonIcon, {\n      className: classes.buttonIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }) : null, buttonText !== undefined ? buttonText : null, caret ? React.createElement(\"b\", {\n      className: caretClasses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }) : null)), React.createElement(Popper, {\n      open: open,\n      anchorEl: this.anchorEl,\n      transition: true,\n      disablePortal: true,\n      placement: dropPlacement,\n      className: classNames({\n        [classes.popperClose]: !open,\n        [classes.pooperResponsive]: true,\n        [classes.pooperNav]: open && navDropdown\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, () => React.createElement(Grow, {\n      in: open,\n      id: \"menu-list\",\n      style: dropup ? {\n        transformOrigin: \"0 100% 0\"\n      } : {\n        transformOrigin: \"0 0 0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.dropdown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, innerDropDown ? dropDownMenu : React.createElement(ClickAwayListener, {\n      onClickAway: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, dropDownMenu)))));\n  }\n\n}\n\nCustomDropdown.defaultProps = {\n  caret: true,\n  dropup: false,\n  hoverColor: \"primary\"\n};\nCustomDropdown.propTypes = {\n  classes: PropTypes.object.isRequired,\n  hoverColor: PropTypes.oneOf([\"dark\", \"primary\", \"info\", \"success\", \"warning\", \"danger\", \"rose\"]),\n  buttonText: PropTypes.node,\n  buttonIcon: PropTypes.object,\n  dropdownList: PropTypes.array,\n  buttonProps: PropTypes.object,\n  dropup: PropTypes.bool,\n  dropdownHeader: PropTypes.node,\n  rtlActive: PropTypes.bool,\n  caret: PropTypes.bool,\n  dropPlacement: PropTypes.oneOf([\"bottom\", \"top\", \"right\", \"left\", \"bottom-start\", \"bottom-end\", \"top-start\", \"top-end\", \"right-start\", \"right-end\", \"left-start\", \"left-end\"]),\n  noLiPadding: PropTypes.bool,\n  innerDropDown: PropTypes.bool,\n  navDropdown: PropTypes.bool,\n  // This is a function that returns the clicked menu item\n  onClick: PropTypes.func\n};\nexport default withStyles(customDropdownStyle)(CustomDropdown);","map":{"version":3,"sources":["/media/cheatcode/0E2286E45B543E69/Projects/Website/recommender-system/MovieRecombieSite/movie-recombie/src/components/CustomDropdown/CustomDropdown.jsx"],"names":["React","classNames","PropTypes","withStyles","MenuItem","MenuList","ClickAwayListener","Paper","Grow","Divider","Popper","Button","customDropdownStyle","CustomDropdown","Component","constructor","props","handleClick","setState","state","open","handleClose","event","anchorEl","contains","target","bind","handleCloseMenu","param","onClick","render","classes","buttonText","buttonIcon","dropdownList","buttonProps","dropup","dropdownHeader","caret","hoverColor","dropPlacement","rtlActive","noLiPadding","innerDropDown","navDropdown","caretClasses","caretDropup","caretActive","caretRTL","dropdownItem","dropdownItemRTL","dropDownMenu","menuList","undefined","map","prop","key","divider","dropdownDividerItem","overflow","padding","innerManager","manager","node","popperClose","pooperResponsive","pooperNav","transformOrigin","dropdown","defaultProps","propTypes","object","isRequired","oneOf","array","bool","func"],"mappings":"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","sourcesContent":["import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Popper from \"@material-ui/core/Popper\";\n// core components\nimport Button from \"components/CustomButtons/Button.jsx\";\n\nimport customDropdownStyle from \"assets/jss/material-kit-pro-react/components/customDropdownStyle.jsx\";\n\nclass CustomDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleCloseMenu = this.handleCloseMenu.bind(this);\n  }\n\n  handleClick = () => {\n    this.setState(state => ({ open: !state.open }));\n  };\n  handleClose = event => {\n    if (this.anchorEl.contains(event.target)) {\n      return;\n    }\n\n    this.setState({ open: false });\n  };\n  handleCloseMenu(param) {\n    this.setState({ open: false });\n    if (this.props && this.props.onClick) {\n      this.props.onClick(param);\n    }\n  }\n  render() {\n    const { open } = this.state;\n    const {\n      classes,\n      buttonText,\n      buttonIcon,\n      dropdownList,\n      buttonProps,\n      dropup,\n      dropdownHeader,\n      caret,\n      hoverColor,\n      dropPlacement,\n      rtlActive,\n      noLiPadding,\n      innerDropDown,\n      navDropdown\n    } = this.props;\n    const caretClasses = classNames({\n      [classes.caret]: true,\n      [classes.caretDropup]: dropup && !open,\n      [classes.caretActive]: open && !dropup,\n      [classes.caretRTL]: rtlActive\n    });\n    const dropdownItem = classNames({\n      [classes.dropdownItem]: true,\n      [classes[hoverColor + \"Hover\"]]: true,\n      [classes.noLiPadding]: noLiPadding,\n      [classes.dropdownItemRTL]: rtlActive\n    });\n    const dropDownMenu = (\n      <MenuList role=\"menu\" className={classes.menuList}>\n        {dropdownHeader !== undefined ? (\n          <MenuItem\n            onClick={() => this.handleCloseMenu(dropdownHeader)}\n            className={classes.dropdownHeader}\n          >\n            {dropdownHeader}\n          </MenuItem>\n        ) : null}\n        {dropdownList.map((prop, key) => {\n          if (prop.divider) {\n            return (\n              <Divider\n                key={key}\n                onClick={() => this.handleCloseMenu(\"divider\")}\n                className={classes.dropdownDividerItem}\n              />\n            );\n          } else if (\n            prop.props !== undefined &&\n            prop.props[\"data-ref\"] === \"multi\"\n          ) {\n            return (\n              <MenuItem\n                key={key}\n                className={dropdownItem}\n                style={{ overflow: \"visible\", padding: 0 }}\n              >\n                {prop}\n              </MenuItem>\n            );\n          }\n          return (\n            <MenuItem\n              key={key}\n              onClick={() => this.handleCloseMenu(prop)}\n              className={dropdownItem}\n            >\n              {prop}\n            </MenuItem>\n          );\n        })}\n      </MenuList>\n    );\n    return (\n      <div className={innerDropDown ? classes.innerManager : classes.manager}>\n        <div className={buttonText !== undefined ? \"\" : classes.target}>\n          <Button\n            aria-label=\"Notifications\"\n            aria-owns={open ? \"menu-list\" : null}\n            aria-haspopup=\"true\"\n            buttonRef={node => {\n              this.anchorEl = node;\n            }}\n            {...buttonProps}\n            onClick={this.handleClick}\n          >\n            {buttonIcon !== undefined ? (\n              <this.props.buttonIcon className={classes.buttonIcon} />\n            ) : null}\n            {buttonText !== undefined ? buttonText : null}\n            {caret ? <b className={caretClasses} /> : null}\n          </Button>\n        </div>\n        <Popper\n          open={open}\n          anchorEl={this.anchorEl}\n          transition\n          disablePortal\n          placement={dropPlacement}\n          className={classNames({\n            [classes.popperClose]: !open,\n            [classes.pooperResponsive]: true,\n            [classes.pooperNav]: open && navDropdown\n          })}\n        >\n          {() => (\n            <Grow\n              in={open}\n              id=\"menu-list\"\n              style={\n                dropup\n                  ? { transformOrigin: \"0 100% 0\" }\n                  : { transformOrigin: \"0 0 0\" }\n              }\n            >\n              <Paper className={classes.dropdown}>\n                {innerDropDown ? (\n                  dropDownMenu\n                ) : (\n                  <ClickAwayListener onClickAway={this.handleClose}>\n                    {dropDownMenu}\n                  </ClickAwayListener>\n                )}\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n      </div>\n    );\n  }\n}\n\nCustomDropdown.defaultProps = {\n  caret: true,\n  dropup: false,\n  hoverColor: \"primary\"\n};\n\nCustomDropdown.propTypes = {\n  classes: PropTypes.object.isRequired,\n  hoverColor: PropTypes.oneOf([\n    \"dark\",\n    \"primary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"danger\",\n    \"rose\"\n  ]),\n  buttonText: PropTypes.node,\n  buttonIcon: PropTypes.object,\n  dropdownList: PropTypes.array,\n  buttonProps: PropTypes.object,\n  dropup: PropTypes.bool,\n  dropdownHeader: PropTypes.node,\n  rtlActive: PropTypes.bool,\n  caret: PropTypes.bool,\n  dropPlacement: PropTypes.oneOf([\n    \"bottom\",\n    \"top\",\n    \"right\",\n    \"left\",\n    \"bottom-start\",\n    \"bottom-end\",\n    \"top-start\",\n    \"top-end\",\n    \"right-start\",\n    \"right-end\",\n    \"left-start\",\n    \"left-end\"\n  ]),\n  noLiPadding: PropTypes.bool,\n  innerDropDown: PropTypes.bool,\n  navDropdown: PropTypes.bool,\n  // This is a function that returns the clicked menu item\n  onClick: PropTypes.func\n};\n\nexport default withStyles(customDropdownStyle)(CustomDropdown);\n"]},"metadata":{},"sourceType":"module"}